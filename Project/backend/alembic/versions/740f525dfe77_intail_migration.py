"""Intail migration

Revision ID: 740f525dfe77
Revises: 
Create Date: 2025-06-12 16:57:26.344831

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '740f525dfe77'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('tests')
    # op.drop_table('assignments')
    # op.drop_table('departments')
    # op.drop_table('subject_teacher_section')
    # op.drop_table('teachers')
    # op.drop_table('quizzes')
    # op.drop_table('subjects')
    # op.drop_table('students')
    # op.drop_table('marks')
    # op.drop_table('sections')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sections',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('department_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='sections_department_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sections_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('marks',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('quiz_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('test_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('obtained_marks', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('graded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], name=op.f('marks_quiz_id_fkey')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('marks_student_id_fkey')),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], name=op.f('marks_test_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('marks_pkey'))
    )
    op.create_table('students',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('section_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], name=op.f('students_section_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('students_pkey')),
    sa.UniqueConstraint('email', name=op.f('students_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('subjects',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('department_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('is_open_elective', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='subjects_department_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='subjects_pkey'),
    sa.UniqueConstraint('code', name='subjects_code_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('quizzes',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('subject_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('section_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('total_marks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], name=op.f('quizzes_section_id_fkey')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('quizzes_subject_id_fkey')),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name=op.f('quizzes_teacher_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('quizzes_pkey'))
    )
    op.create_table('teachers',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('department_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='teachers_department_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='teachers_pkey'),
    sa.UniqueConstraint('email', name='teachers_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('subject_teacher_section',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('subject_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('section_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], name=op.f('subject_teacher_section_section_id_fkey')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('subject_teacher_section_subject_id_fkey')),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name=op.f('subject_teacher_section_teacher_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('subject_teacher_section_pkey'))
    )
    op.create_table('departments',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='departments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('assignments',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('subject_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('section_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], name=op.f('assignments_section_id_fkey')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('assignments_subject_id_fkey')),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name=op.f('assignments_teacher_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('assignments_pkey'))
    )
    op.create_table('tests',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('subject_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('section_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('scheduled_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_marks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], name=op.f('tests_section_id_fkey')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('tests_subject_id_fkey')),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name=op.f('tests_teacher_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('tests_pkey'))
    )
    # ### end Alembic commands ###
